//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcCrud.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DbModels : DbContext
    {
        public DbModels()
            : base("name=DbModels")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Student> Students { get; set; }
    
        public virtual ObjectResult<Employee> PRC_GETEMPDETAILS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("PRC_GETEMPDETAILS");
        }
    
        public virtual ObjectResult<Employee> PRC_GETEMPDETAILS(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("PRC_GETEMPDETAILS", mergeOption);
        }
    
        public virtual ObjectResult<Employee> PRC_DELETEEMPDETAILS(Nullable<int> emp_id)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("PRC_DELETEEMPDETAILS", emp_idParameter);
        }
    
        public virtual ObjectResult<Employee> PRC_DELETEEMPDETAILS(Nullable<int> emp_id, MergeOption mergeOption)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("PRC_DELETEEMPDETAILS", mergeOption, emp_idParameter);
        }
    
        public virtual ObjectResult<Employee> PRC_GETEMPBYID(Nullable<int> emp_id)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("PRC_GETEMPBYID", emp_idParameter);
        }
    
        public virtual ObjectResult<Employee> PRC_GETEMPBYID(Nullable<int> emp_id, MergeOption mergeOption)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("PRC_GETEMPBYID", mergeOption, emp_idParameter);
        }
    
        public virtual ObjectResult<Employee> PRC_INSERTEMPDETAILS(string name, string address, string position)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("PRC_INSERTEMPDETAILS", nameParameter, addressParameter, positionParameter);
        }
    
        public virtual ObjectResult<Employee> PRC_INSERTEMPDETAILS(string name, string address, string position, MergeOption mergeOption)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("PRC_INSERTEMPDETAILS", mergeOption, nameParameter, addressParameter, positionParameter);
        }
    
        public virtual ObjectResult<Employee> PRC_UPDATEEMPDETAILS(Nullable<int> emp_id, string name, string address, string position)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("PRC_UPDATEEMPDETAILS", emp_idParameter, nameParameter, addressParameter, positionParameter);
        }
    
        public virtual ObjectResult<Employee> PRC_UPDATEEMPDETAILS(Nullable<int> emp_id, string name, string address, string position, MergeOption mergeOption)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("PRC_UPDATEEMPDETAILS", mergeOption, emp_idParameter, nameParameter, addressParameter, positionParameter);
        }
    
        public virtual ObjectResult<Student> prc_getstudentdetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Student>("prc_getstudentdetails");
        }
    
        public virtual ObjectResult<Student> prc_getstudentdetails(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Student>("prc_getstudentdetails", mergeOption);
        }
    
        public virtual ObjectResult<Student> prc_insertstudentdetails(string name, string @class, string address)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Student>("prc_insertstudentdetails", nameParameter, classParameter, addressParameter);
        }
    
        public virtual ObjectResult<Student> prc_insertstudentdetails(string name, string @class, string address, MergeOption mergeOption)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Student>("prc_insertstudentdetails", mergeOption, nameParameter, classParameter, addressParameter);
        }
    
        public virtual ObjectResult<Student> prc_getstudentbyid(Nullable<int> studentId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Student>("prc_getstudentbyid", studentIdParameter);
        }
    
        public virtual ObjectResult<Student> prc_getstudentbyid(Nullable<int> studentId, MergeOption mergeOption)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Student>("prc_getstudentbyid", mergeOption, studentIdParameter);
        }
    }
}
